@*Test Controller Public View*@

@inject SignInManager<IdentityUser> SignInManager


@{
    ViewData["Title"] = "Docs";

    Layout = "~/Views/Shared/_PublicView.cshtml";

    App app = ViewBag.MenuLevel1;
    List<Menu> Menus = app?.Menus.ToList();




    var tags = Menus?.Select(x => x.MenuTags).ToList();



    var tagObject = Json.Serialize(Menus?.Select(x => new { x.AppID, x.App.AppName, x.MenuID, x.MenuTags, x.MenuText }).ToList());



    int? selectedMenuId = ViewBag.SelectedMenu;

    List<App> listOfApp = ViewBag.AllApps;



    var currentUser = ViewBag.currentUser;


    var menId = ViewBag.menuId;

}

<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

<style>
    .customAnc {
        padding: 10px !important;
        background-color: #fff;
        /*color:#fff !important;*/
        z-index: 10;
        border-radius: 10px;
        margin-top: 10px;
    }

    #fixedButton {
        position: fixed;
        display: block;
        z-index: 10;
        right: 0;
        bottom: 0;
    }

    .top-right {
        position: fixed;
        display: block;
        z-index: 10;
        right: 0;
        top: 100px;
    }

    .ancCursor {
        cursor: pointer;
    }

    .limit_text {
        /*overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;*/
    }
</style>

<h1></h1>

<br />
<br />

@{var count = 1; }

@{
    string menuForId = "m";
}

<section class="section-content py-3">

    @if (app == null)
    {
        <div class="row justify-content-center">
            @if (listOfApp.Count > 0)
            {

                @foreach (var item in listOfApp.Where(x => x.IsPublished == true))
                {

                    <div class="card col-md-3 m-4">
                        <div class="card-body">
                            <h3 class="card-title">@item.AppName</h3>
                            <h6 class="card-text mt-4">@item.AppTitle</h6>

                            <a class="btn btn-dark mt-4" asp-action="PublicView" asp-controller="Test" asp-route-id="@item.AppID">Go To Documentation</a>
                        </div>
                    </div>

                }

            }
            else
            {
                <div class="card col-md-6 justify-content-center">
                    <div class="card-body">
                        <h2>No Documentation Available</h2>
                    </div>
                </div>
            }
        </div>

    }
    else
    {
        <div class="row">
            <div class="col-md-4 col-lg-3">
                <div class="nav-left-sidebar sidebar-dark">
                    <div class="menu-list">
                        <nav class="navbar navbar-expand-lg navbar-light">
                            <div style="height:150px;"></div>
                            <a class="d-xl-none d-lg-none" href="#">Dashboard</a>
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="navbar-toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse" id="navbarNav">


                                <ul class="navbar-nav flex-column" id="navUl">
                                    <li class="nav-item mt-3">
                                        <input type="text" class="form-control" placeholder="Search" onkeyup="filterMenu(this.value)" id="txtFilter" />
                                        <span id="lblResult">

                                        </span>

                                    </li>

                                    @foreach (var menuLevel1 in Menus.Where(x => x.ParentID == null && x.IsPublished == true))
                                    {
                                        <li class="nav-item">
                                            @if (selectedMenuId == menuLevel1.MenuID)
                                            {

                                                @if (menuLevel1.ChildMenu != null)
                                                {

                                                    @if (menuLevel1.ChildMenu.Count > 0)
                                                    {
                                                        <a id="@menuForId@menuLevel1.MenuID" asp-controller="Test" asp-action="PublicView" asp-route-menuId="@menuLevel1.MenuID" asp-route-id="@menuLevel1.AppID" class="nav-link" data-toggle="collapse" aria-expanded="false" data-target="#submenu-@count" aria-controls="submenu-@count">
                                                            <span style="display:none" class="searchTags" value="@menuLevel1.MenuID">@menuLevel1.MenuTags</span>

                                                            @menuLevel1.MenuText
                                                        </a>
                                                    }
                                                }
                                                else
                                                {
                                                    <a id="@menuForId@menuLevel1.MenuID" asp-controller="Test" asp-action="PublicView" asp-route-menuId="@menuLevel1.MenuID" asp-route-id="@menuLevel1.AppID" class="nav-link">

                                                        <span style="display:none" class="searchTags" value="@menuLevel1.MenuID">@menuLevel1.MenuTags</span>

                                                        @menuLevel1.MenuText
                                                    </a>
                                                }

                                                @if (menuLevel1.ChildMenu != null)
                                                {
                                                    @if (menuLevel1.ChildMenu.Count > 0)
                                                    {

                                                        <div id="submenu-@count" class="collapse submenu" style="">
                                                            @{
                                                                count++;
                                                                await ShowTree(menuLevel1.ChildMenu, count);
                                                            }
                                                        </div>


                                                    }
                                                }


                                            }
                                            else
                                            {


                                                @if (menuLevel1.ChildMenu != null)
                                                {
                                                    @if (menuLevel1.ChildMenu.Count > 0)
                                                    {
                                                        <a id="@menuForId@menuLevel1.MenuID" asp-controller="Test" asp-action="PublicView" asp-route-menuId="@menuLevel1.MenuID" asp-route-id="@menuLevel1.AppID" class="nav-link" data-toggle="collapse" aria-expanded="false" data-target="#submenu-@count" aria-controls="submenu-@count">
                                                            <span style="display:none" value="@menuLevel1.MenuID" class="searchTags">@menuLevel1.MenuTags</span>

                                                            @menuLevel1.MenuText
                                                        </a>
                                                    }
                                                }
                                                else
                                                {
                                                    <a id="@menuForId@menuLevel1.MenuID" asp-controller="Test" asp-action="PublicView" asp-route-menuId="@menuLevel1.MenuID" asp-route-id="@menuLevel1.AppID" class="nav-link">
                                                        <span style="display:none" class="searchTags" value="@menuLevel1.MenuID">@menuLevel1.MenuTags</span>

                                                        @menuLevel1.MenuText
                                                    </a>
                                                }

                                                @if (menuLevel1.ChildMenu != null)
                                                {
                                                    @if (menuLevel1.ChildMenu.Count > 0)
                                                    {

                                                        <div id="submenu-@count" class="collapse submenu" style="">
                                                            @{
                                                                count++;
                                                                await ShowTree(menuLevel1.ChildMenu, count);
                                                            }
                                                        </div>


                                                    }
                                                }
                                            }

                                        </li>
                                        count++;
                                    }



                                    @*<li class="nav-item mt-4">



                                            <a class="text-white nav-link ancCursor"  onclick="printWholeDiv('print-whole-body')"><i class="text-white fas fa-file-pdf"></i> Download Whole Pdf</a>
                                        </li>*@

                                </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>


            <div class="col-lg-8 col-md-7 ml-4">
                <br />






                @{
                    var menu = Menus.FirstOrDefault(x => x.ParentID == null);

                    var con = menu.Contents;



                }

                @if (selectedMenuId == null)
                {
                    @foreach (var c in con.Where(x => x.Menu.IsPublished == true).OrderByDescending(x => x.VersionNo).Take(1))
                    {



                        var word_count = c.ContentBody;
                        var counts = word_count.Count(ch => ch == ' ') + 1;
                        var minutes = counts / 250;
                        var seconds = counts % 250 / (250 / 60);
                        var str_minutes = (minutes <= 1) ? "Minute " : "Minutes ";
                        var str_seconds = (seconds == 1) ? "Second " : "Seconds ";




                        @*<div class="text-center">
                                <i class="fas fa-clock"></i> <span class="badge badge-light"> User Read Time :  @minutes @str_minutes @seconds @str_seconds </span>
                            </div>*@


                        <div class="float-right row">
                            <span class="form-inline ml-5 my-2 my-lg-0 float-right">
                                <input id="searchValue" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                                <button id="btnSearch" class="btn btn-sm btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                            </span>

                        </div>
                        <div class="mt-5" id="lblResult2">

                        </div>
                        <br /> <br />
                        <div class="mt-3 hideContent">
                            @Html.Raw(c.ContentBody)
                        </div>


                    }

                }
                else
                {



                    var menuTwo = Menus.FirstOrDefault(x => x.MenuID == selectedMenuId);

                    var conTwo = menuTwo.Contents;



                    var markItem = menuTwo.MarkAsReads.Select(a => new { a.IsRead, a.UserName, a.MenuID }).FirstOrDefault(x => x.UserName == currentUser);


                    @foreach (var co in conTwo.Where(x => x.Menu.IsPublished == true).OrderByDescending(x => x.VersionNo).Take(1))
                    {
                        var word_count = co.ContentBody;
                        var counts = word_count.Count(ch => ch == ' ') + 1;
                        var minutes = counts / 250;
                        var seconds = counts % 250 / (250 / 60);
                        var str_minutes = (minutes <= 1) ? "Minute " : "Minutes ";
                        var str_seconds = (seconds == 1) ? "Second " : "Seconds ";

                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin") || User.IsInRole("Super Admin"))
                        {
                            <div class="btn-group" id="fixedButton" role="group" aria-label="Basic example">
                                <a style="color:white;" class="btn btn-sm btn-warning" asp-action="Edit" asp-route-AppId="@ViewBag.appId" asp-route-id="@ViewBag.menuId" asp-route-version="@co.VersionNo" target="_blank" title="Edit Content"><i class="fa fa-edit"></i></a>

                                <a style="color:white;" class="btn btn-sm btn-primary" asp-action="ChangeVersion" asp-route-id="@ViewBag.menuId" asp-route-version="@co.VersionNo" target="_blank" title="Change Version"><i class="fa fa-plus"></i></a>
                            </div>



                        }







                        @*<div class="bottom-right">



                                @if (SignInManager.IsSignedIn(User))
                                {
                                    @if (markItem != null)
                                    {
                                        @if (markItem.UserName == currentUser && markItem.IsRead == true)
                                        {
                                            <p class="badge badge-success">Read Complete</p>

                                        }
                                        else
                                        {
                                            <span><button id="mark-as-read" class="badge badge-success">Mark as Read</button></span>
                                            <span class="badge badge-success" id="complete" style="display:none;">Read Complete</span>
                                        }
                                    }
                                    else
                                    {
                                        <span><button id="mark-as-read" class="badge badge-success">Mark as Read</button></span>
                                        <span class="badge badge-success" id="complete" style="display:none;">Read Complete</span>
                                    }

                                }


                            </div>*@

                        <div>
                            @*<div class="text-center mb-2">
                                    <i class="fas fa-clock"></i> <span class="badge badge-light"> User Read Time :  @minutes @str_minutes @seconds @str_seconds </span>

                                </div>*@


                            <div class="bottom-right">



                                @if (SignInManager.IsSignedIn(User))
                                {
                                    @if (markItem != null)
                                    {
                                        @if (markItem.UserName == currentUser && markItem.IsRead == true)
                                        {
                                            <p class="badge badge-success">Read Complete</p>

                                        }
                                        else
                                        {
                                            <span><button id="mark-as-read" class="badge badge-success">Mark as Read</button></span>
                                            <span class="badge badge-success" id="complete" style="display:none;">Read Complete</span>
                                        }
                                    }
                                    else
                                    {
                                        <span><button id="mark-as-read" class="badge badge-success">Mark as Read</button></span>
                                        <span class="badge badge-success" id="complete" style="display:none;">Read Complete</span>
                                    }

                                }


                            </div>




                            <div class="float-right row">
                                <span class="form-inline ml-5 my-2 my-lg-0 float-right">
                                    <input id="searchValue" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                                    <button id="btnSearch" class="btn btn-sm btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                                </span>

                                @*<span id="lblResult2">

                                    </span>*@
                            </div>
                            <div class="mt-5" id="lblResult2">

                            </div>
                            <br /><br />

                            <div id="print-body" class="mb-5 mt-3 hideContent">
                                @Html.Raw(co.ContentBody)

                            </div>







                            @*<a class="text-white nav-link float-right badge badge-info ancCursor" onclick="printDiv('print-body')"><i class="fas fa-file-pdf"></i> Download Pdf</a>*@









                        </div>
                    }




                }

            </div>

        </div>
    }



    <div style="display:none;" id="print-whole-body">
        @if (app != null)
        {
            <div class="container py-3">
                <div class="row menu-height">

                    <ul class="navbar-nav flex-column" style="list-style:none;">
                        @foreach (var menuLevel1 in Menus.Where(x => x.ParentID == null))
                        {
                            <li class="nav-item">


                                @if (menuLevel1.ChildMenu != null)
                                {
                                    @if (menuLevel1.ChildMenu.Count > 0)
                                    {
                                        <a class="nav-link">

                                            @menuLevel1.MenuText


                                        </a>
                                    }
                                }
                                else
                                {
                                    <a class="nav-link">


                                        @menuLevel1.MenuText
                                    </a>
                                }

                                @if (menuLevel1.ChildMenu != null)
                                {
                                    @if (menuLevel1.ChildMenu.Count > 0)
                                    {

                                        <div>
                                            @{
                                                await ShowPdfTree(menuLevel1.ChildMenu);
                                            }
                                        </div>


                                    }
                                }


                            </li>
                        }
                    </ul>
                </div>

                <br />
                <div class="row">
                    @foreach (var content in Menus)
                    {

                        <div class="content-height">

                            <h1 style="text-align:center;">@content.MenuText</h1>
                            <hr />
                            <br />
                            <div class="m-3 p-3">

                                @foreach (var con in content.Contents.OrderByDescending(x => x.VersionNo).Take(1))
                                {
                                    @Html.Raw(con.ContentBody)

                                }



                            </div>

                        </div>
                    }
                </div>
            </div>

        }
    </div>

</section>


@functions {

    public async Task ShowPdfTree(ICollection<Menu> menus)
    {


        <ul class="nav flex-column" style="list-style:none;">
            @foreach (var menu in menus)
            {
                <li class="nav-item">
                    @if (menu.ChildMenu != null)
                    {

                        @if (menu.ChildMenu.Count > 0)
                        {
                            <a class="nav-link">
                                @menu.MenuText
                            </a>
                        }
                    }
                    else
                    {
                        <a class="nav-link">



                            @menu.MenuText

                        </a>
                    }

                    @if (menu.ChildMenu != null)
                    {

                        @if (menu.ChildMenu.Count > 0)
                        {
                            <div style="">
                                @{
                                    await ShowPdfTree(menu.ChildMenu.ToList());
                                }
                            </div>

                        }


                    }
                </li>
            }
        </ul>

    }
}




@functions {

    public async Task ShowTree(ICollection<Menu> menus, int counter)
    {

        string menuForId = "m";

        <ul class="nav flex-column">
            @foreach (var menu in menus)
            {
                <li class="nav-item">
                    @if (menu.ChildMenu != null)
                    {

                        @if (menu.ChildMenu.Count > 0)
                        {
                            <a id="@menuForId@menu.MenuID" asp-controller="Test" asp-action="PublicView" asp-route-menuId="@menu.MenuID" asp-route-id="@menu.AppID" class="nav-link" data-toggle="collapse" aria-expanded="false" data-target="#submenu-@counter" aria-controls="submenu-@counter">
                                <span style="display:none" class="searchTags" value="@menu.MenuID">@menu.MenuTags</span>
                                @menu.MenuText
                            </a>
                        }
                    }
                    else
                    {
                        <a id="@menuForId@menu.MenuID" asp-controller="Test" asp-action="PublicView" asp-route-menuId="@menu.MenuID" asp-route-id="@menu.AppID" class="nav-link">

                            <span style="display:none" class="searchTags" value="@menu.MenuID">@menu.MenuTags</span>

                            @menu.MenuText

                        </a>
                    }

                    @if (menu.ChildMenu != null)
                    {

                        @if (menu.ChildMenu.Count > 0)
                        {
                            <div id="submenu-@counter" class="collapse submenu" style="">
                                @{
                                    counter++;
                                    await ShowTree(menu.ChildMenu.ToList(), counter);
                                }
                            </div>

                        }


                    }
                </li>
                counter++;
            }
        </ul>

    }
}



@section Scripts{




    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>



        $(document).ready(function () {

            var menuId = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.menuId))');
            if (menuId !== 'null') {

                $("#m" + menuId).addClass("active");
                $("#m" + menuId).parents().removeClass("collapse");



            }



            $("#btnSearch").click(function () {


                var searchField = $("#searchValue").val();
                var expression = RegExp(searchField, "i");

                $.ajax({
                    type: "GET",
                    url: "/Test/Search?searchTest=" + searchField,
                    success: function (response) {
                        var data = response;
                        console.log(response);


                        if (searchField.toLowerCase() != '') {
                            var content = data.filter(x => x.ContentBody.toLowerCase().includes(searchField));
                            if (content != '') {
                                //$(".hideContent").hide();
                                $("#lblResult2").empty();
                                $.each(content, function (k, v) {
                                    $("#lblResult2").append(`<a class="badge badge-success m-1 nav-link limit_text" href="/Test/PublicView/${v.AppID}?menuId=${v.MenuID}">${v.MenuText}</a></br>`);


                                })
                            } else {
                                //$(".hideContent").hide();
                                $("#lblResult2").empty();
                                $("#lblResult2").append(`<div></br></br><h3 class="text-center bg-primary pt-2 pb-2">No Content found according to your search Query...</h3></div>`)
                            }




                        } else {
                            $(".#lblResult2").empty();


                        }



                    }
                })



            $.ajax({
            url: '@Url.Action("SearchByUser", "Test")',
            method: "POST",
            dataType: "json",
            data: {
                searchedWord: searchField
            },
            success: function (data) {
                console.log(data);
            },
            error: function (err) {
                console.log(err);
            }
            })


            })













        })
        function map_to_li(obj) {
            var tags = document.getElementsByClassName("searchTags");
            $.each(tags, function (k, v) {
                if (v.textContent == obj) {
                    var url = '@Url.ActionLink("PublicView", "Test")?menuId=' + v.getAttribute('value');
                    window.location.href = url;
                    var p = v.parentNode.click();
                }

            });
        }

        function filterMenu(searchString) {
            var menuObject = JSON.parse('@tagObject');
            console.log(menuObject);

            if (searchString != '') {
                var menu = menuObject.filter(x => x.menuTags.includes(searchString));
                $("#lblResult").empty();
                $.each(menu, function (k, v) {
                    $("#lblResult").append(`<a class="nav-link customAnc" onclick="map_to_li('${v.menuTags}')">${v.menuText}</a>`);

                    /*$("#lblResult").append(`<a class="nav-link customAnc" href="/App/PublicView/${v.appID}?menuId=${v.menuID}">${v.menuText}</a>`);*/
                })

            } else {
                $("#lblResult").empty();

            }

        }

        $("#mark-as-read").click(function () {

            var menuId = '@selectedMenuId';

            Submitform(menuId);
        })



        function Submitform(obj) {
        $.ajax({
            url: '@Url.Action("MarkAsRead", "App")',
            method: "POST",
            dataType: "json",
            data: {
                menuId:obj
            },
            success: function (data) {
                $("#mark-as-read").remove();
                $("#complete").show();
                toastr.success('Finished Reading...');
            },
            error: function (err) {
                console.log(err);
            }
        })
        }



    </script>






}